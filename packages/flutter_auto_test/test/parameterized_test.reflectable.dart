// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import 'dart:core';
import 'package:flutter_auto_test/src/api/auto_test.dart' as prefix0;
import 'package:flutter_auto_test/src/flutter_auto_test.dart' as prefix2;
import 'parameterized_test.dart' as prefix1;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.AutoTests(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'Parameterized',
            r'.Parameterized',
            134217735,
            0,
            const prefix0.AutoTests(),
            const <int>[0, 1, 2],
            const <int>[3, 4, 5, 6, 7, 0, 1],
            const <int>[],
            -1,
            {},
            {},
            {r'': (bool b) => () => b ? prefix1.Parameterized() : null},
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.autoTests],
            null)
      ],
      <m.DeclarationMirror>[
        r.MethodMirrorImpl(
            r'parameterizedTestInt',
            1310722,
            0,
            -1,
            -1,
            -1,
            null,
            const <int>[0, 1],
            const prefix0.AutoTests(),
            const <Object>[prefix2.parameterizedTest, prefix2.autoSource]),
        r.MethodMirrorImpl(
            r'doubleTest',
            1310722,
            0,
            -1,
            -1,
            -1,
            null,
            const <int>[2, 3],
            const prefix0.AutoTests(),
            const <Object>[prefix2.parameterizedTest, prefix2.autoSource]),
        r.MethodMirrorImpl(r'', 64, 0, -1, 0, 0, null, const <int>[],
            const prefix0.AutoTests(), const []),
        r.MethodMirrorImpl(r'==', 2097154, -1, -1, 1, 1, null, const <int>[4],
            const prefix0.AutoTests(), const []),
        r.MethodMirrorImpl(r'toString', 2097154, -1, -1, 2, 2, null,
            const <int>[], const prefix0.AutoTests(), const []),
        r.MethodMirrorImpl(r'noSuchMethod', 524290, -1, -1, -1, -1, null,
            const <int>[5], const prefix0.AutoTests(), const []),
        r.MethodMirrorImpl(r'hashCode', 2097155, -1, -1, 3, 3, null,
            const <int>[], const prefix0.AutoTests(), const []),
        r.MethodMirrorImpl(r'runtimeType', 2097155, -1, -1, 4, 4, null,
            const <int>[], const prefix0.AutoTests(), const [])
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(r'a', 134348806, 0, const prefix0.AutoTests(), -1,
            3, 3, null, const [], null, null),
        r.ParameterMirrorImpl(r'b', 134348806, 0, const prefix0.AutoTests(), -1,
            3, 3, null, const [], null, null),
        r.ParameterMirrorImpl(r'a', 134348806, 1, const prefix0.AutoTests(), -1,
            5, 5, null, const [], null, null),
        r.ParameterMirrorImpl(r'b', 134348806, 1, const prefix0.AutoTests(), -1,
            5, 5, null, const [], null, null),
        r.ParameterMirrorImpl(r'other', 134348806, 3, const prefix0.AutoTests(),
            -1, 6, 6, null, const [], null, null),
        r.ParameterMirrorImpl(r'invocation', 134348806, 5,
            const prefix0.AutoTests(), -1, 7, 7, null, const [], null, null)
      ],
      <Type>[
        prefix1.Parameterized,
        bool,
        String,
        int,
        Type,
        double,
        Object,
        Invocation
      ],
      1,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'parameterizedTestInt': (dynamic instance) =>
            instance.parameterizedTestInt,
        r'doubleTest': (dynamic instance) => instance.doubleTest
      },
      {},
      null,
      []),
  const prefix2.Test(): r.ReflectorData(
      <m.TypeMirror>[],
      <m.DeclarationMirror>[],
      <m.ParameterMirror>[],
      <Type>[],
      0,
      {},
      {},
      null,
      []),
  const prefix2.ParameterizedTest(): r.ReflectorData(
      <m.TypeMirror>[],
      <m.DeclarationMirror>[],
      <m.ParameterMirror>[],
      <Type>[],
      0,
      {},
      {},
      <m.LibraryMirror>[],
      []),
  const prefix2.AutoSource(): r.ReflectorData(
      <m.TypeMirror>[],
      <m.DeclarationMirror>[],
      <m.ParameterMirror>[],
      <Type>[],
      0,
      {},
      {},
      null,
      [])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
